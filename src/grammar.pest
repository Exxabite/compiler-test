program = _{ SOI ~ "\n"* ~ (func ~ "\n"+) * ~ func? ~ EOI }

func = {"fn" ~ alpha ~ "()" ~ block}

block = { "{" ~ expr* ~ "}" }

expr = { (assign_expr | block | declare_expr) ~ ";"}

declare_expr = { data_type ~ alpha ~ "=" ~ value_expr }

assign_expr = {  alpha ~ operator ~ value_expr }

value_expr = { integer | alpha }

data_type = { alpha ~ ":" }

operator = { "=" | "+="}

alpha = @{ (ASCII_ALPHA | "_")+ }

integer = @{ "-"? ~ ASCII_DIGIT+ }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }